---
subtitle: "Data Visualisation with R"
pagetitle: "R graphics"
author: "Emi Tanaka"
date: "28th November 2022"
host: "Australasian Applied Statistics Conference 2022"
institute: "Monash University"
strip-comments: true
format: 
  revealjs:
    logo: images/monash-one-line-black-rgb.png
    slide-number: true
    theme: assets/monash.scss
    show-slide-number: all
    controls: true
    width: 1280
    height: 720
    incremental: true
    auto-stretch: false
    css: [assets/custom.css, assets/pacman.css, assets/tachyons-addon.css]
    include-after: |
      <link rel="stylesheet" href="assets/syntax-highlight.css">
      <link rel="stylesheet" href="assets/fontawesome-free-6.1.1-web/css/all.min.css">
      <script src="assets/fontawesome-free-6.1.1-web/js/all.min.js"></script>
callout-icon: false
execute:
  echo: true
---


## {#title-slide background-image="images/bg1.jpeg"}

```{r}
#| label: setup
#| include: false
library(tidyverse)
source("setup.R")
```

```{r}
#| child: title-slide.qmd
```



## Why data visualisation?

Data visualisation is a powerful tool to **_explore_**, **_understand_** and **_communicate_** data

::: {.panel-tabset}

## Table

```{r}
#| echo: false
covid <- read_csv(here::here("data/tidycovid-20221116.csv"))

covid %>% 
  mutate(case = (confirmed - lag(confirmed, 1))) %>% 
  select(date, case) %>% 
  filter(!is.na(case)) %>% 
  DT::datatable(rownames = FALSE, width = 500, options = list(paging = FALSE, scrollY = "300px", dom = 't'))
```


## Plot

```{r}
#| echo: false
#| fig-height: 4
covid %>% 
  mutate(case = (1 + confirmed - lag(confirmed, 1))) %>%
  ggplot(aes(date, case)) +
  geom_line() +
  scale_y_log10(labels = scales::comma) +
  labs(x = "Date", y = "Number of cases",
       title = "COVID-19 cases in Australia") +
  theme_classic(base_size = 18) +
  theme(plot.title.position = "plot")
```


:::



## A data visualisation catalogue

```{r}
#| echo: false
#| output: asis
fns <- dir(here::here("slides/images/catalogue/"))
cat(paste0("<img class='catalogue' src='images/catalogue/", fns, "'>", collapse = ""))
```

## Graphics üñºÔ∏è

* Graphics are commonly stored in a standard image format such as **svg**, **jpg** (or **jpeg**), **png**, **pdf**, and so on. 
* When you view these graphics electronically, you would be using some graphical device to render the stored image. 
* In R, the graphic is rendered by the graphical engine, `grDevices` (one of the core R package).


## Graphics model in R 

* Two main graphics model in R are implemented via two core packages: 
    * `graphics` package, and
    * `grid` package.
* Plot using the `graphics` system is normally referred to as the **base graphics**.
* If the graphics is produced using the `grid` package, then it is using the **`grid` graphics** model.


## Base graphics

* Base graphics are drawn via the `graphics` package.

. . . 

<center>
<img src="images/base-graphics.png" width="50%">
</center>


## `grid` graphics

* The `grid` package contains low-level functions, i.e. draws only parts of the plot.
* This system gives a lot of control over the graphics, but requires the user to do a lot of work to draw a complete plot.
* You won't be directly interacting with the `grid` package.
* Instead you'll be using the **`ggplot2` package** that provides high-level functions for plotting via the `grid` system.


## Other graphical systems

* All other graphical systems are provided via contributed packages (i.e. you need to install it once to use it).
* The two most well known packages are:
   * `lattice` and 
   * `ggplot2`. 
* Both of these packages use the `grid` package to draw the plots.

## Summary of R graphics

![](images/r-graphics-system.png)
